@page "/movies/details/{Id}"
@inject Opinion_app.Data.ApplicationDbContext DB
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore
@using Opinion_app.Components

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Movie</h4>
    <hr />
    @if (movie is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@movie.Title</dd>
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@movie.Description</dd>
            <dt class="col-sm-2">ReleaseDate</dt>
            <dd class="col-sm-10">@movie.ReleaseDate</dd>
            <dt class="col-sm-2">Rate</dt>
            <dd class="col-sm-10">@movie.Rate</dd>
            <dt class="col-sm-2">Image</dt>
            <dd class="col-sm-10"><img src="@movie.ImageUrl" alt="Movie Image" style="max-width: 200px; max-height: 200px;" /></dd>
        </dl>

        <h4>Add Rating</h4>
        <form @onsubmit="AddRating">
            <input type="number" @bind="newRating" step="0.1" min="0" max="10" />
            <button type="submit">Add Rating</button>
        </form>

        <div>
            <a href="@($"/movies/edit/{movie.Id}")">Edit</a> |
            <a href="@($"/movies")">Back to List</a>
        </div>
    }
</div>

@code {
    Movie? movie;
    float newRating;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        movie = await DB.Movie.FirstOrDefaultAsync(m => m.Id == Id);

        if (movie is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task AddRating()
    {
        if (movie != null)
        {
            float totalRate = movie.Rate.HasValue ? movie.Rate.Value : 0;
            int totalRatings = movie.Rate.HasValue ? 1 : 0;

            totalRate += newRating;
            totalRatings++;

            movie.Rate = totalRate / totalRatings;

            await DB.SaveChangesAsync();
        }
    }
}

