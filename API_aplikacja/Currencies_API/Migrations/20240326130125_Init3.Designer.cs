// <auto-generated />
using System;
using Currencies_API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Currencies_API.Migrations
{
    [DbContext(typeof(Currencies))]
    [Migration("20240326130125_Init3")]
    partial class Init3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("Currencies_API.Data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("base")
                        .HasColumnType("TEXT");

                    b.Property<int?>("timestamp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("Currencies_API.Rates", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<double>("CHF")
                        .HasColumnType("REAL");

                    b.Property<double>("CZK")
                        .HasColumnType("REAL");

                    b.Property<double>("EUR")
                        .HasColumnType("REAL");

                    b.Property<double>("GBP")
                        .HasColumnType("REAL");

                    b.Property<double>("PLN")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("Currencies_API.Rates", b =>
                {
                    b.HasOne("Currencies_API.Data", null)
                        .WithOne("rates")
                        .HasForeignKey("Currencies_API.Rates", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Currencies_API.Data", b =>
                {
                    b.Navigation("rates");
                });
#pragma warning restore 612, 618
        }
    }
}
